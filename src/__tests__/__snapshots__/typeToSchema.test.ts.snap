// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`typeToSchema TypeSchemaBuilder compiles and saves multiple combined schemas: builderTogetherOne 1`] = `
Object {
  "builderTogetherOne": Object {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "additionalProperties": false,
    "properties": Object {
      "a": Object {
        "description": "a",
        "minimum": 1,
        "type": "number",
      },
    },
    "required": Array [
      "a",
    ],
    "type": "object",
  },
  "builderTogetherTwo": Object {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "additionalProperties": false,
    "definitions": Object {
      "IRefMe": Object {
        "additionalProperties": false,
        "properties": Object {
          "a": Object {
            "additionalProperties": false,
            "properties": Object {
              "c": Object {
                "enum": Array [
                  1,
                ],
                "type": "number",
              },
            },
            "required": Array [
              "c",
            ],
            "type": "object",
          },
        },
        "required": Array [
          "a",
        ],
        "type": "object",
      },
    },
    "properties": Object {
      "c": Object {
        "enum": Array [
          1,
          2,
          3,
        ],
        "type": "number",
      },
      "reffed": Object {
        "items": Object {
          "$ref": "#/definitions/IRefMe",
        },
        "type": "array",
      },
    },
    "required": Array [
      "c",
      "reffed",
    ],
    "type": "object",
  },
}
`;

exports[`typeToSchema TypeSchemaBuilder compiles and saves multiple combined schemas: builderTogetherTwo 1`] = `
Object {
  "builderTogetherOne": Object {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "additionalProperties": false,
    "properties": Object {
      "a": Object {
        "description": "a",
        "minimum": 1,
        "type": "number",
      },
    },
    "required": Array [
      "a",
    ],
    "type": "object",
  },
  "builderTogetherTwo": Object {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "additionalProperties": false,
    "definitions": Object {
      "IRefMe": Object {
        "additionalProperties": false,
        "properties": Object {
          "a": Object {
            "additionalProperties": false,
            "properties": Object {
              "c": Object {
                "enum": Array [
                  1,
                ],
                "type": "number",
              },
            },
            "required": Array [
              "c",
            ],
            "type": "object",
          },
        },
        "required": Array [
          "a",
        ],
        "type": "object",
      },
    },
    "properties": Object {
      "c": Object {
        "enum": Array [
          1,
          2,
          3,
        ],
        "type": "number",
      },
      "reffed": Object {
        "items": Object {
          "$ref": "#/definitions/IRefMe",
        },
        "type": "array",
      },
    },
    "required": Array [
      "c",
      "reffed",
    ],
    "type": "object",
  },
}
`;

exports[`typeToSchema TypeSchemaBuilder compiles and saves multiple seperate schemas: builderSeperateOne 1`] = `
Object {
  "default": Object {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "additionalProperties": false,
    "properties": Object {
      "a": Object {
        "description": "a",
        "minimum": 1,
        "type": "number",
      },
    },
    "required": Array [
      "a",
    ],
    "type": "object",
  },
}
`;

exports[`typeToSchema TypeSchemaBuilder compiles and saves multiple seperate schemas: builderSeperateTwo 1`] = `
Object {
  "default": Object {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "additionalProperties": false,
    "definitions": Object {
      "IRefMe": Object {
        "additionalProperties": false,
        "properties": Object {
          "a": Object {
            "additionalProperties": false,
            "properties": Object {
              "c": Object {
                "enum": Array [
                  1,
                ],
                "type": "number",
              },
            },
            "required": Array [
              "c",
            ],
            "type": "object",
          },
        },
        "required": Array [
          "a",
        ],
        "type": "object",
      },
    },
    "properties": Object {
      "c": Object {
        "enum": Array [
          1,
          2,
          3,
        ],
        "type": "number",
      },
      "reffed": Object {
        "items": Object {
          "$ref": "#/definitions/IRefMe",
        },
        "type": "array",
      },
    },
    "required": Array [
      "c",
      "reffed",
    ],
    "type": "object",
  },
}
`;

exports[`typeToSchema saveExports() creates a file with imports and exports: saveExports 1`] = `
Object {
  "a": Object {
    "foo": 1,
  },
  "b": Object {
    "bar": 2,
  },
}
`;

exports[`typeToSchema saveSchemas() saves a single schema as default export to a .ts file: singleSchemaDefaultExport 1`] = `
Object {
  "default": Object {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "additionalProperties": false,
    "properties": Object {
      "a": Object {
        "description": "a",
        "minimum": 1,
        "type": "number",
      },
    },
    "required": Array [
      "a",
    ],
    "type": "object",
  },
}
`;

exports[`typeToSchema saveSchemas() saves a single schema to a .json file: singleSchemaJson 1`] = `
Object {
  "name": "Test",
  "schema": Object {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "additionalProperties": false,
    "properties": Object {
      "a": Object {
        "description": "a",
        "minimum": 1,
        "type": "number",
      },
    },
    "required": Array [
      "a",
    ],
    "type": "object",
  },
  "type": "ITest",
}
`;

exports[`typeToSchema saveSchemas() saves multiple schema to a .ts file: manySchemas 1`] = `
Object {
  "Test": Object {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "additionalProperties": false,
    "properties": Object {
      "a": Object {
        "description": "a",
        "minimum": 1,
        "type": "number",
      },
    },
    "required": Array [
      "a",
    ],
    "type": "object",
  },
  "Test2": Object {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "additionalProperties": false,
    "definitions": Object {
      "IRefMe": Object {
        "additionalProperties": false,
        "properties": Object {
          "a": Object {
            "additionalProperties": false,
            "properties": Object {
              "c": Object {
                "enum": Array [
                  1,
                ],
                "type": "number",
              },
            },
            "required": Array [
              "c",
            ],
            "type": "object",
          },
        },
        "required": Array [
          "a",
        ],
        "type": "object",
      },
    },
    "properties": Object {
      "c": Object {
        "enum": Array [
          1,
          2,
          3,
        ],
        "type": "number",
      },
      "reffed": Object {
        "items": Object {
          "$ref": "#/definitions/IRefMe",
        },
        "type": "array",
      },
    },
    "required": Array [
      "c",
      "reffed",
    ],
    "type": "object",
  },
}
`;

exports[`typeToSchema typesToSchemas() produces a schema with an annotated $ref: annotatedReffedSchema 1`] = `
Array [
  Object {
    "name": undefined,
    "schema": Object {
      "$schema": "http://json-schema.org/draft-06/schema#",
      "additionalProperties": false,
      "properties": Object {
        "a": Object {
          "$ref": "test-ref#",
        },
      },
      "required": Array [
        "a",
      ],
      "type": "object",
    },
    "type": "IRefTest",
  },
]
`;

exports[`typeToSchema typesToSchemas() produces a schema with an overridden $ref: reffedSchema 1`] = `
Array [
  Object {
    "name": "Test2",
    "schema": Object {
      "$schema": "http://json-schema.org/draft-06/schema#",
      "additionalProperties": false,
      "definitions": Object {
        "IRefMe": Object {
          "$ref": "ref-me#",
        },
      },
      "properties": Object {
        "c": Object {
          "enum": Array [
            1,
            2,
            3,
          ],
          "type": "number",
        },
        "reffed": Object {
          "items": Object {
            "$ref": "#/definitions/IRefMe",
          },
          "type": "array",
        },
      },
      "required": Array [
        "c",
        "reffed",
      ],
      "type": "object",
    },
    "type": "ITest2",
  },
]
`;

exports[`typeToSchema typesToSchemas() produces a single schema from one file: singleSchema 1`] = `
Object {
  "name": "Test",
  "schema": Object {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "additionalProperties": false,
    "properties": Object {
      "a": Object {
        "description": "a",
        "minimum": 1,
        "type": "number",
      },
    },
    "required": Array [
      "a",
    ],
    "type": "object",
  },
  "type": "ITest",
}
`;

exports[`typeToSchema typesToSchemas() produces multiple schemas from one file: multipleSchemas 1`] = `
Array [
  Object {
    "name": "Test",
    "schema": Object {
      "$schema": "http://json-schema.org/draft-06/schema#",
      "additionalProperties": false,
      "properties": Object {
        "a": Object {
          "description": "a",
          "minimum": 1,
          "type": "number",
        },
      },
      "required": Array [
        "a",
      ],
      "type": "object",
    },
    "type": "ITest",
  },
  Object {
    "name": "Test2",
    "schema": Object {
      "$schema": "http://json-schema.org/draft-06/schema#",
      "additionalProperties": false,
      "definitions": Object {
        "IRefMe": Object {
          "additionalProperties": false,
          "properties": Object {
            "a": Object {
              "additionalProperties": false,
              "properties": Object {
                "c": Object {
                  "enum": Array [
                    1,
                  ],
                  "type": "number",
                },
              },
              "required": Array [
                "c",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "a",
          ],
          "type": "object",
        },
      },
      "properties": Object {
        "c": Object {
          "enum": Array [
            1,
            2,
            3,
          ],
          "type": "number",
        },
        "reffed": Object {
          "items": Object {
            "$ref": "#/definitions/IRefMe",
          },
          "type": "array",
        },
      },
      "required": Array [
        "c",
        "reffed",
      ],
      "type": "object",
    },
    "type": "ITest2",
  },
]
`;
